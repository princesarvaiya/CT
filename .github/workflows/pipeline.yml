name: Deploy based on env
on:
    push: 
     branches: 
        - main

jobs: 
   
  login:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      token: ${{ steps.ecr.outputs.token }}
    steps:
      
      - name: Get token to login to Amazon ECR
        uses: PhutureCorp/ecr-login-token@v0.8.0
        with:
          registry: <aws-account-number>.dkr.ecr.<region>.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: login
    container:
      image: <aws-account-number>.dkr.ecr.<region>.amazonaws.com/<image>:<version>
      credentials:
        username: AWS
        password: ${{ needs.login.outputs.token }}
    steps:
          
     - name: reading values from shell
       run: ./source.sh
       shell: bash
          
     - name: Check if image already exists in ECR
       id: check-ecr-image
       run: |
        export REPOSITORY_NAME=${{ env.REPOSITORY_NAME }}
        export IMAGE_TAG=${{ env.IMAGE_TAG }}
        export IMAGE_NAME="${REPOSITORY_NAME}:${IMAGE_TAG}"
        export ECR_REPOSITORY=${{ env.ECR_REPOSITORY }}

        
        if aws ecr describe-images --repository-name ${ECR_REPOSITORY} --image-ids imageTag=${IMAGE_TAG} | grep "imageTag" ; then
          echo "Image ${IMAGE_NAME} already exists in ECR, skipping push"
          exit 78
        else
          echo "Image ${IMAGE_NAME} does not exist in ECR, proceeding with push"
        fi  
     
     
     - name: Build and push Docker image
       if: steps.check-ecr-image.outputs.exit-code != 78
       run: |
        export REPOSITORY_NAME=${{ env.REPOSITORY_NAME }}
        export IMAGE_TAG=${{ env.IMAGE_TAG }}
        export ECR_REPOSITORY=${{ env.ECR_REPOSITORY }}
        # Build the Docker image
        docker build -t $REPOSITORY_NAME:$IMAGE_TAG .
        # Log in to ECR
        $(aws ecr get-login --no-include-email)
        # Tag the image
        docker tag $REPOSITORY_NAME:$IMAGE_TAG $ECR_REPOSITORY:$IMAGE_TAG
        # Push the image
        docker push $ECR_REPOSITORY:$IMAGE_TAG
        
        
      
      
