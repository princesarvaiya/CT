name: Deploy based on env
on:
    push: 
     branches: 
        - main
permissions:
   id-token: write
   contents: read 

jobs: 
     
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write
      contents: read
    steps:
     - uses: actions/checkout@v3
     - name: Get branch name
       id: branch_name
       run: echo "::set-output name=branch_name::${{ github.ref }}"
       
     - name: Check folder name
       run: |
         FOLDER_NAME=$(git diff-tree --no-commit-id --name-only -r $GITHUB_SHA | cut -d'/' -f1 | sort | uniq)
         echo "The folder name is $FOLDER_NAME"
            
       
     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@v1 # More information on this action can be found below in the 'AWS Credentials' section
       with:
          role-to-assume: arn:aws:iam::085395249379:role/sreekanth-role-delete-me
          aws-region: us-east-1
          #testing
     - name: Get ECR Login
       run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 085395249379.dkr.ecr.us-east-1.amazonaws.com

          
     - name: ecr image checking
       uses: aws-actions/configure-aws-credentials@v1 # More information on this action can be found below in the 'AWS Credentials' section
       with:
          role-to-assume: arn:aws:iam::085395249379:role/sreekanth-role-delete-me
          aws-region: us-east-1
       env:
         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
         ECR_REPOSITORY: sample-repo
         IMAGE_TAG: ${{ github.sha }}

   
     - name: upload image to ECR
       uses: appleboy/docker-ecr-action@master
       with:
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          registry: ${{ steps.login-ecr.outputs.registry }}
          repo: sample-repo
          region: us-east-1
          auto_tag: true
          daemon_off: false
          dockerfile: Dockerfile
          context: example
                 
     - name: login to amazon ECR
       run: |
         aws ecr list-images --repository-name sample-repo --region us-east-1
         
              
     - name: helm
       run: |
         aws eks update-kubeconfig --region us-east-1 --name myeksclusterday2
         curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
         chmod 700 get_helm.sh
         ./get_helm.sh
         kubectl get nodes
         cd frontend
         helm upgrade --install myfirstrelease myhelm -f values.yaml -f templates/deployment.yaml 
         #helm upgrade --install <release_name> <chart> --namespace <namespace> -f <values_file.yaml> [flags]

     
             
       
   
        
      
      
